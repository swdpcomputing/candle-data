{"version":3,"sources":["theme.js","common/radioGroupMUI.jsx","common/likeheart.jsx","common/tableHeader.jsx","common/tableBody.jsx","common/table.jsx","components/coinPairTable.jsx","common/binanceWSConnection.js","common/common.js","utils/paginate.js","common/navigation.jsx","common/timelineDotAndConnector.jsx","common/timelineItemPaper.jsx","common/stepperMUI.jsx","common/stepperMUIWrapper.jsx","components/candleDataTimeline.jsx","common/listGroup.jsx","common/paginateMUI.jsx","common/dropdownMUI.jsx","components/main.jsx","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","secondary","error","grey","typography","fontFamily","join","fontSize","RadioGroupMUI","items","selectedItem","onItemSelect","textProperty","valueProperty","Object","keys","FormControl","component","RadioGroup","row","value","onChange","e","target","map","item","FormControlLabel","key","control","Radio","label","defaultProps","Likeheart","liked","onClick","heartState","style","cursor","className","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","this","columns","textAlign","Component","TableBody","renderCell","content","_","get","createKey","_id","data","Table","width","tableLayout","CoinPairTable","coinPair","onLike","type","onView","coinPairs","BinanceWSConnection","url","callback","setRefreshRate","newRefreshRate","_refreshRate","startCallLoop","checkInitialDataIntegrity","isEmpty","_rawData","window","setTimeout","sendData","initialise","a","connect","_server","socketError","Promise","resolve","reject","ws","WebSocket","_url","onopen","console","log","onclose","onerror","err","close","onmessage","rawData","disconnect","message","refresh","clearInterval","intervalId","setInterval","JSON","parse","pair","coinPairId","open","substring","high","low","common","_callback","paginate","pageNumber","pageSize","startIndex","slice","take","withRouter","id","location","pathname","to","useStyles","makeStyles","primaryClass","backgroundColor","secondaryClass","TimelineDotAndConnector","dotColour","dotVariant","connectorColour","classes","TimelineSeparator","TimelineDot","color","variant","TimelineConnector","paper","padding","timelineContentContainer","timelineContent","display","transform","minWidth","TimelineItemPaper","oppositeContent","title","textLines","TimelineItem","TimelineOppositeContent","Typography","dotColor","TimelineContent","Paper","elevation","textLine","text","root","backButton","marginRight","spacing","instructions","marginTop","marginBottom","icon","StepperMUI","activeStep","Stepper","alternativeLabel","Step","itemText","StepLabel","StepIconProps","active","timeline","height","StepperMUIWrapper","titleText","CandleDataTimeline","Timeline","align","ListGroup","PaginationMUI","itemsCount","currentPage","onPageChange","pagesCount","Math","ceil","React","useState","page","setPage","useEffect","checkCurrentPageIsNotBiggerThanNumberOfPages","isNaN","Pagination","count","event","formControl","margin","labelPlacement","selectEmpty","border","borderRadius","borderColor","DropdownMUI","labelText","Select","labelId","MenuItem","FormHelperText","Main","state","pageSizes","refreshRate","refreshRates","Off","bwsc","handleWSData","setState","handleLike","index","indexOf","handleView","coinPairToView","handlePageChange","handleSort","handleRefreshRateChange","handlePageSizeChange","getPagedData","allCoinPairs","orderBy","totalCount","undefined","length","Grid","container","direction","alignItems","justify","checked","xs","App","ThemeProvider","CssBaseline","basename","process","exact","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3b764bff.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#51d652\",\r\n    },\r\n\r\n    secondary: {\r\n      main: \"#f40703\",\r\n    },\r\n\r\n    error: {\r\n      main: \"#FFBF00\",\r\n    },\r\n\r\n    grey: {\r\n      main: \"#737373\",\r\n    },\r\n  },\r\n\r\n  typography: {\r\n    fontFamily: [\"Roboto\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\"].join(\",\"),\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n\r\nconst RadioGroupMUI = ({\r\n  items,\r\n  selectedItem,\r\n  onItemSelect,\r\n  textProperty,\r\n  valueProperty,\r\n}) => {\r\n  if (typeof items === \"object\") items = Object.keys(items); // allows a 1d array of items, or an object with items as keys\r\n\r\n  const handleChange = (e) => {\r\n    onItemSelect(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <RadioGroup row value={selectedItem} onChange={handleChange}>\r\n        {items.map((item) => (\r\n          <FormControlLabel\r\n            key={item}\r\n            value={item}\r\n            control={<Radio />}\r\n            label={item}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nRadioGroupMUI.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nRadioGroupMUI.propTypes = {\r\n  items: PropTypes.oneOfType([\r\n    PropTypes.array.isRequired,\r\n    PropTypes.object.isRequired,\r\n  ]),\r\n  selectedItem: PropTypes.string.isRequired,\r\n  onItemSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default RadioGroupMUI;","import React from \"react\";\r\n\r\nconst Likeheart = ({liked, onClick}) => {//Destructuring props from the props argument of the function\r\n  let heartState = \"fa fa-heart\";\r\n  if (!liked) heartState += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={heartState}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Likeheart;","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    //this.props.columns.map((column) => (console.log(column.path, column.key, column.path || column.key)))\r\n    //console.log('')\r\n\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              className=\"clickable\"\r\n              style={{ textAlign: \"center\" }}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    // using lodash as nested properties cannot be used with bracket notation\r\n    // gets the value at column.path\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key); // returns either the key or path, depending on whether its a simple text item, or a component\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((\r\n          item // for each of the items within the data object\r\n        ) => (\r\n          <tr key={item._id}>\r\n            {/*...create a row with a key of the id of the item */}\r\n            {columns.map((\r\n              column // within each row, for each column\r\n            ) => (\r\n              <td // ...create a cell\r\n                key={this.createKey(item, column)} // ...with a key made from the item and column ids\r\n                style={{ textAlign: \"center\" }} // ...with centred text\r\n              >\r\n                {this.renderCell(item, column)}{\" \"}\r\n                {/*...that displays text matched in renderCell*/}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\" style={{ width: '80vw', tableLayout: 'fixed' }}>\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} /> \r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n\r\nTable.propTypes = {\r\n  columns: PropTypes.array.isRequired, // array of column objects\r\n  sortColumn: PropTypes.object.isRequired, // column object (keys: path, order)\r\n  onSort: PropTypes.func.isRequired, // callback function that handles sorting\r\n  data: PropTypes.array.isRequired, // array of objects to match into columns\r\n};","import React, { Component } from \"react\";\r\nimport Likeheart from \"../common/likeheart\";\r\nimport Table from \"../common/table\";\r\n\r\nclass CoinPairTable extends Component {\r\n  columns = [\r\n    { path: \"coinPairId\", label: \"Pair\" },\r\n    { path: \"open\", label: \"Open\" },\r\n    { path: \"high\", label: \"High\" },\r\n    { path: \"low\", label: \"Low\" },\r\n    { path: \"close\", label: \"Close\" },\r\n    {\r\n      label: \"Pin\",\r\n      key: \"pin\",\r\n      content: (coinPair) => (\r\n        <Likeheart\r\n          liked={coinPair.liked}\r\n          onClick={() => this.props.onLike(coinPair)}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      label: \"View\",\r\n      key: \"view\",\r\n      content: (coinPair) => (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n          onClick={() => this.props.onView(coinPair)}\r\n        >\r\n          Open\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  render() {\r\n    const { coinPairs, sortColumn, onSort } = this.props; // interface\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={coinPairs}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoinPairTable;","import * as common from \"../common/common.js\";\r\nimport _ from \"lodash\";\r\n\r\n// To-do - Seperate the data formatting into an interface to make this class reusable as WebSocketConnection\r\n\r\nclass BinanceWSConnection {\r\n  constructor(url, callback) {\r\n    this._url = url;\r\n    this._callback = callback;\r\n    this._refreshRate = 2000; // Fast initial rate to speed up table.\r\n    this._rawData = {};\r\n    this._server = {};\r\n    this.intervalId = 0;\r\n    this.ws = {};\r\n    this.initialise();\r\n  }\r\n\r\n  setRefreshRate = (newRefreshRate) => {\r\n    this._refreshRate = newRefreshRate;\r\n    this.startCallLoop();\r\n  };\r\n\r\n  checkInitialDataIntegrity = () => {\r\n    if (_.isEmpty(this._rawData)) {\r\n      window.setTimeout(this.checkInitialDataIntegrity, 100);\r\n    } else {\r\n      this.sendData();\r\n    }\r\n  };\r\n\r\n  initialise = async () => {\r\n    try {\r\n      this._server = await this.connect();\r\n      this.checkInitialDataIntegrity();\r\n      this.startCallLoop();\r\n    } catch (err) {\r\n      this.socketError(err);\r\n    }\r\n  };\r\n\r\n  connect = () => {\r\n    return new Promise((resolve, reject) => {\r\n      this.ws = new WebSocket(this._url);\r\n\r\n      this.ws.onopen = () => {\r\n        console.log(\"Connected WebSocket\");\r\n        resolve(this.ws);\r\n      };\r\n\r\n      this.ws.onclose = (e) => {\r\n        console.log(\"Socket is closed\");\r\n      };\r\n\r\n      this.ws.onerror = (err) => {\r\n        this.socketError(err);\r\n        reject(err);\r\n        this.ws.close();\r\n      };\r\n\r\n      this.ws.onmessage = (rawData) => {\r\n        this._rawData = rawData;\r\n      };\r\n    });\r\n  };\r\n\r\n  disconnect = () => {\r\n    this.ws.close();\r\n  }\r\n\r\n  socketError = (err) => {\r\n    console.error(\"Socket encountered error: \", err.message, \"Closing socket\");\r\n  };\r\n\r\n  refresh = () => {\r\n    this.sendData()\r\n  }\r\n\r\n  startCallLoop = () => {\r\n    clearInterval(this.intervalId);\r\n\r\n    if (this._refreshRate !== 0) {\r\n      this.intervalId = setInterval(() => {\r\n        this.sendData();\r\n      }, this._refreshRate);\r\n    }\r\n  };\r\n\r\n  sendData = () => {\r\n    if (!_.isEmpty(this._rawData)) {\r\n      // checks for empty data\r\n      let data = common.convertToJSON(this._rawData); // converts raw data to JSON\r\n      data = common.allMarketMiniTickerToSOHLC(data); // converts JSON to SOHLC format\r\n      this._callback(data); // sends data back to parent\r\n    }\r\n  };\r\n}\r\n\r\nexport { BinanceWSConnection };","export const convertToJSON = (rawData) => {\r\n    return JSON.parse(rawData.data);\r\n  };\r\n  \r\n  export const allMarketMiniTickerToSOHLC = (data) => {\r\n    //converts the All Market Mini Ticker data to {pairID, open, high, low, close}\r\n    data = data.map((pair) => {\r\n      return {\r\n        _id: pair[\"s\"], //new identifier: pairId\r\n        coinPairId: pair[\"s\"], //new identifier: pairId\r\n        open: pair[\"o\"].substring(0, 10), //new identifier: open\r\n        high: pair[\"h\"].substring(0, 10), //new identifier: high\r\n        low: pair[\"l\"].substring(0, 10), //new identifier: low\r\n        close: pair[\"c\"].substring(0, 10), //new identifier: close\r\n      };\r\n    });\r\n    return data;\r\n  };","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction Navigation(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n        <div className=\"container\">\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n            <ul className=\"navbar-nav sm-auto\">\r\n              <li\r\n                className={`nav-item  ${\r\n                  props.location.pathname === \"/\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link className=\"nav-link\" to=\"/\">\r\n                  Home\r\n                  <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={`nav-item  ${\r\n                  props.location.pathname === \"/timeline\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link className=\"nav-link\" to=\"/timeline\">\r\n                  Timeline\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Navigation);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  primaryClass: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  secondaryClass: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nconst TimelineDotAndConnector = ({\r\n  dotColour,\r\n  dotVariant,\r\n  connectorColour,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TimelineSeparator>\r\n      <TimelineDot color={dotColour} variant={dotVariant}></TimelineDot>\r\n      <TimelineConnector\r\n        className={\r\n          connectorColour === \"primary\"\r\n            ? classes.primaryClass\r\n            : classes.secondaryClass\r\n        }\r\n      />\r\n    </TimelineSeparator>\r\n  );\r\n};\r\n\r\nTimelineDotAndConnector.defaultProps = {\r\n  dotColour: \"primary\",\r\n  dotVariant: \"default\", // outlined - default\r\n  connectorColour: \"primary\",\r\n};\r\n\r\nexport default TimelineDotAndConnector;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TimelineDotAndConnector from \"../common/timelineDotAndConnector\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: \"6px 16px\",\r\n  },\r\n  timelineContentContainer: {\r\n    textAlign: \"left\",\r\n  },\r\n  timelineContent: {\r\n    display: \"inline-block\",\r\n    transform: \"rotate(90deg)\",\r\n    textAlign: \"center\",\r\n    minWidth: 50,\r\n  },\r\n}));\r\n\r\nconst TimelineItemPaper = ({\r\n  oppositeContent,\r\n  title,\r\n  dotColour,\r\n  dotVariant,\r\n  connectorColour,\r\n  textLines,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TimelineItem>\r\n      <TimelineOppositeContent>\r\n        <Typography>{oppositeContent}</Typography>\r\n      </TimelineOppositeContent>\r\n\r\n      <TimelineDotAndConnector\r\n        dotColor={dotColour}\r\n        dotVariant={dotVariant}\r\n        connectorColour={connectorColour}\r\n      />\r\n\r\n      <TimelineContent className={classes.timelineContentContainer}>\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Typography variant=\"h6\" component=\"h1\">\r\n            {title}\r\n          </Typography>\r\n          {textLines.map((textLine) => (\r\n            <Typography color={textLine.color} key={textLine.text}>{textLine.text}</Typography>\r\n          ))}\r\n        </Paper>\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n};\r\n\r\nTimelineItemPaper.defaultProps = {\r\n  oppositeContent: \"\",\r\n  title: \"Title\",\r\n  dotColour: \"primary\",\r\n  dotVariant: \"default\", // outlined - default\r\n  connectorColour: \"primary\",\r\n  textLines: [],\r\n};\r\n\r\nTimelineItemPaper.propTypes = {\r\n  textLines: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default TimelineItemPaper;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  icon: {\r\n    color: \"#FFBF00 !important\",\r\n  },\r\n}));\r\n\r\nconst StepperMUI = ({ items, activeStep }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {items.map((item) => (\r\n          <Step key={\"step\" + item.itemText}>\r\n            <StepLabel\r\n              key={\"stepLabel\" + item.itemText}\r\n              StepIconProps={{\r\n                classes: {\r\n                  active: classes.icon,\r\n                },\r\n              }}\r\n            >\r\n              {item.itemText}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nStepperMUI.defaultProps = {\r\n  activeStep: 0,\r\n};\r\n\r\nStepperMUI.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default StepperMUI;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport PropTypes from \"prop-types\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineOppositeContent from \"@material-ui/lab/TimelineOppositeContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TimelineDotAndConnector from \"./timelineDotAndConnector\";\r\nimport StepperMUI from \"./stepperMUI\";\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    padding: \"6px 16px\",\r\n  },\r\n  timeline: {\r\n    transform: \"rotate(90deg)\",\r\n    height: 130,\r\n  },\r\n});\r\n\r\nconst StepperMUIWrapper = ({\r\n  titleText,\r\n  oppositeContent,\r\n  items,\r\n  activeStep,\r\n  dotColour,\r\n  dotVariant,\r\n  connectorColour,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TimelineItem>\r\n      <TimelineOppositeContent>\r\n        <Typography>{oppositeContent}</Typography>\r\n      </TimelineOppositeContent>\r\n      <TimelineDotAndConnector\r\n        dotColour={dotColour}\r\n        dotVariant={dotVariant}\r\n        connectorColour={connectorColour}\r\n      />\r\n      <TimelineContent className={classes.timelineContent}>\r\n        <Paper elevation={24} className={classes.paper}>\r\n          <Typography variant=\"h6\" component=\"h1\">\r\n            {titleText}\r\n          </Typography>\r\n          <StepperMUI items={items} activeStep={activeStep}></StepperMUI>\r\n        </Paper>\r\n      </TimelineContent>\r\n    </TimelineItem>\r\n  );\r\n};\r\n\r\nStepperMUIWrapper.defaultProps = {\r\n  oppositeContent: \"\",\r\n  titleText: \"Title\",\r\n  activeStep: 0,\r\n  dotColour: \"primary\",\r\n  dotVariant: \"default\", // outlined - default\r\n  connectorColour: \"primary\",\r\n};\r\n\r\nStepperMUIWrapper.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default StepperMUIWrapper;\r\n","import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItemPaper from \"../common/timelineItemPaper\";\r\nimport StepperMUIWrapper from \"../common/stepperMUIWrapper\";\r\n\r\nconst CandleDataTimeline = () => {\r\n  return (\r\n    <Timeline align=\"alternate\">\r\n      <TimelineItemPaper\r\n        oppositeContent={\"v0.1\"}\r\n        title={\"Initial app completed\"}\r\n        dotColour={\"primary\"}\r\n        dotVariant={\"default\"}\r\n        connectorColour={\"primary\"}\r\n        // prettier-ignore\r\n        textLines={[\r\n          {text: \"-> WebSocket data from Binance API - All Market Mini-Ticker\", color:'primary'},\r\n          {text: \"-> Main title with slow-scrolling candle backdrop\", color:'primary'},\r\n          {text: \"-> Radio group to change automatic refresh rate\", color:'primary'},\r\n          {text: \"-> Manual Refresh Button\", color:'primary'},\r\n          {text: \"-> Change number of results per page\", color:'primary'},\r\n          {text: \"-> Table showing PairID, Open, High, Low, Close\", color:'primary'},\r\n          {text: \"-> Pagination component that dissappears if there is one page\", color:'primary'},\r\n          {text: \"-> Multi-page functionality using React Router\", color:'primary'},\r\n          {text: \"-> Table only shows trading-pairs that have updated since last refresh\", color:'secondary'},\r\n          {text: \"-> Like button inactive, open button inactive \", color:'secondary'},\r\n          {text: \"-> Initial shift left ~5px when table first loads \", color:'secondary'},\r\n        ]}\r\n      ></TimelineItemPaper>\r\n\r\n      <StepperMUIWrapper\r\n        titleText={\"API calls, in addition to existing Web-Socket updates\"}\r\n        oppositeContent={\"v0.11\"}\r\n        // prettier-ignore\r\n        items={[\r\n          { itemText: \"Add select time-period component\" },\r\n          { itemText: \"Fetch historial data, for the selected time-period\" },\r\n          { itemText: \"Display active trading-pairs\" },\r\n          { itemText: \"Mini-Ticker to update historical data\" },\r\n        ]}\r\n        activeStep={-1}\r\n        dotColour={\"secondary\"}\r\n        dotVariant={\"outlined\"}\r\n        connectorColour={\"secondary\"}\r\n      />\r\n\r\n      <StepperMUIWrapper\r\n        titleText={\"Further sorting functionality\"}\r\n        oppositeContent={\"v0.12\"}\r\n        // prettier-ignore\r\n        items={[\r\n          { itemText: \"Sort by recently updated\" },\r\n          { itemText: \"Sort by largest % rise since last candle-close\" },\r\n          { itemText: \"Sort by largest % drop since last candle-close\" },\r\n        ]}\r\n        activeStep={-1}\r\n        dotColour={\"secondary\"}\r\n        dotVariant={\"outlined\"}\r\n        connectorColour={\"secondary\"}\r\n      />\r\n\r\n      <StepperMUIWrapper\r\n        titleText={\"Filtering & Pinning\"}\r\n        oppositeContent={\"v0.13\"}\r\n        // prettier-ignore\r\n        items={[\r\n          { itemText: \"Drop-down filtering component\" },\r\n          { itemText: \"Filter by trading-pair market (UDST, BTC etc)\" },\r\n          { itemText: \"Pin trading-pair to top of table\" },\r\n        ]}\r\n        activeStep={-1}\r\n        dotColour={\"secondary\"}\r\n        dotVariant={\"outlined\"}\r\n        connectorColour={\"secondary\"}\r\n      />\r\n\r\n      <StepperMUIWrapper\r\n        titleText={\"Open trading-pair chart & details\"}\r\n        oppositeContent={\"v0.2\"}\r\n        // prettier-ignore\r\n        items={[\r\n          { itemText: \"Drop-down / drawer / collapsible for each table row\"},\r\n          { itemText: \"Candlestick chart in drop-down\" },\r\n          { itemText: \"Trading pair details in drop-down\" },\r\n        ]}\r\n        activeStep={-1}\r\n        dotColour={\"secondary\"}\r\n        dotVariant={\"outlined\"}\r\n        connectorColour={\"secondary\"}\r\n      />\r\n\r\n      <StepperMUIWrapper\r\n        titleText={\"New page for trading pair data analysis\"}\r\n        oppositeContent={\"v0.21\"}\r\n        // prettier-ignore\r\n        items={[\r\n          { itemText: \"Zooming and scrolling of candlestick chart\"},\r\n          { itemText: \"Analyse data for patterns (Engulfing, Harami, etc)\" },\r\n          { itemText: \"Drop-down component to choose pattern to highlight on chart\" },\r\n          { itemText: \"Analyse data following patterns to discover trends\" },\r\n          { itemText: \"Interface to select factors for data analysis\" },\r\n        ]}\r\n        activeStep={-1}\r\n        dotColour={\"secondary\"}\r\n        dotVariant={\"outlined\"}\r\n        connectorColour={\"secondary\"}\r\n      />\r\n    </Timeline>\r\n  );\r\n};\r\n\r\nexport default CandleDataTimeline;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  selectedItem,\r\n  onItemSelect,\r\n  textProperty,\r\n  valueProperty, //Destructuring props from the props argument of the function\r\n}) => {\r\n  return (\r\n    <div style={{ cursor: \"pointer\" }}>\r\n      <ul className=\"list-group\">\r\n        {items.map((item) => (\r\n          <li\r\n            key={item[valueProperty]}\r\n            className={\r\n              item === selectedItem\r\n                ? \"list-group-item active\"\r\n                : \"list-group-item\"\r\n            }\r\n            onClick={() => onItemSelect(item)}\r\n          >\r\n            {item[textProperty]}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\",\r\n};\r\n\r\nListGroup.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  selectedItem: PropTypes.object.isRequired,\r\n  onItemSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ListGroup;","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst PaginationMUI = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(currentPage);\r\n\r\n  useEffect(() => {\r\n    checkCurrentPageIsNotBiggerThanNumberOfPages();\r\n  });\r\n\r\n  const checkCurrentPageIsNotBiggerThanNumberOfPages = () => {\r\n    if (currentPage > pagesCount) {\r\n      setPage(pagesCount);\r\n      onPageChange(pagesCount);\r\n    }\r\n  };\r\n\r\n  if (pagesCount === 1 || isNaN(pagesCount)) {\r\n    return null;\r\n  }\r\n\r\n  const handleChange = (event, value) => {\r\n    setPage(value);\r\n    onPageChange(value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination\r\n        count={pagesCount}\r\n        page={page}\r\n        color=\"secondary\"\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nPaginationMUI.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PaginationMUI;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 10,\r\n    labelPlacement: 'end'\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(0),\r\n    border: \"2px solid\",\r\n    borderRadius: \"15px\",\r\n    borderColor: theme.palette.grey.main,\r\n    height: \"25px\",\r\n  },\r\n}));\r\n\r\nconst DropdownMUI = ({ items, selectedItem, onItemSelect, labelText }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (event) => {\r\n    onItemSelect(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl variant=\"outlined\" className={classes.formControl}>\r\n        <Select\r\n          className={classes.selectEmpty}\r\n          labelId=\"labelID\"\r\n          id=\"id\"\r\n          value={selectedItem}\r\n          onChange={handleChange}\r\n        >\r\n          {items.map((item) => (\r\n            <MenuItem value={item} key={item}>{item}</MenuItem>\r\n          ))}\r\n        </Select>\r\n        <FormHelperText>{labelText}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdownMUI.propTypes = {\r\n  items: PropTypes.oneOfType([\r\n    PropTypes.array.isRequired,\r\n    PropTypes.object.isRequired,\r\n  ]),\r\n  selectedItem: PropTypes.number.isRequired,\r\n  onItemSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DropdownMUI;\r\n","import React, { Component } from \"react\";\r\nimport \"../css/main.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport RadioGroupMUI from \"../common/radioGroupMUI\";\r\nimport CoinPairTable from \"./coinPairTable\";\r\nimport { BinanceWSConnection } from \"../common/binanceWSConnection\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport { PaginateMUI, DropdownMUI } from \"../common\";\r\nimport _ from \"lodash\";\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    coinPairs: {},\r\n    currentPage: 1,\r\n    pageSize: 10,\r\n    pageSizes: [10, 20, 30, 50, 100],\r\n    sortColumn: { path: \"coinPairId\", order: \"asc\" },\r\n    refreshRate: \"2s\",\r\n    refreshRates: {\r\n      Off: 0,\r\n      \"2s\": 2000,\r\n      \"10s\": 10000,\r\n      \"30s\": 30000,\r\n      \"1m\": 60000,\r\n      \"5m\": 360000,\r\n    },\r\n    bwsc: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const url = \"wss://stream.binance.com:9443/ws/!miniTicker@arr\";\r\n    const bwsc = new BinanceWSConnection(url, this.handleWSData);\r\n    this.setState({ bwsc: bwsc });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Does clean up websoket, error only displays once\r\n    this.state.bwsc.disconnect();\r\n  }\r\n\r\n  handleWSData = (coinPairs) => {\r\n    this.setState({ coinPairs });\r\n  };\r\n\r\n  handleLike = (coinPair) => {\r\n    const coinPairs = [...this.state.coinPairs];\r\n    const index = coinPairs.indexOf(coinPair);\r\n    coinPairs[index] = { ...coinPairs[index] };\r\n    coinPairs[index].liked = !coinPairs[index].liked;\r\n    this.setState({ coinPairs });\r\n  };\r\n\r\n  handleView = (coinPairToView) => {};\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleRefreshRateChange = (refreshRate) => {\r\n    this.setState({ refreshRate: refreshRate }); //, currentPage: 1???\r\n    this.state.bwsc.setRefreshRate(this.state.refreshRates[refreshRate]);\r\n  };\r\n\r\n  handlePageSizeChange = (pageSize) => {\r\n    this.setState({ pageSize: pageSize });\r\n  };\r\n\r\n  getPagedData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      coinPairs: allCoinPairs,\r\n    } = this.state;\r\n\r\n    const sorted = _.orderBy(\r\n      allCoinPairs,\r\n      [sortColumn.path],\r\n      [sortColumn.order]\r\n    );\r\n\r\n    const coinPairs = paginate(sorted, currentPage, pageSize);\r\n    const totalCount =\r\n      allCoinPairs.length === undefined ? 0 : allCoinPairs.length;\r\n    return { totalCount, coinPairs };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      pageSize,\r\n      pageSizes,\r\n      currentPage,\r\n      sortColumn,\r\n      refreshRates,\r\n      refreshRate,\r\n    } = this.state;\r\n    const { totalCount, coinPairs } = this.getPagedData();\r\n\r\n    return (\r\n      <div>\r\n        <Grid container spacing={1} direction=\"column\" alignItems=\"center\">\r\n          <Grid container direction=\"column\" alignItems=\"center\">\r\n            <h1 className=\"main-title\">Candle-data</h1>\r\n          </Grid>\r\n\r\n          <Grid container direction=\"row\" justify=\"center\">\r\n            <FormControlLabel\r\n              control={<Radio color=\"primary\"></Radio>}\r\n              label={\"Refresh\"}\r\n              onClick={this.state.bwsc.refresh}\r\n              checked={true}\r\n              style={{ marginBottom: \"47px\" }}\r\n            />\r\n\r\n            <RadioGroupMUI\r\n              items={refreshRates}\r\n              selectedItem={refreshRate}\r\n              onItemSelect={this.handleRefreshRateChange}\r\n            />\r\n\r\n            <DropdownMUI\r\n              items={pageSizes}\r\n              selectedItem={pageSize}\r\n              onItemSelect={this.handlePageSizeChange}\r\n              labelText={\"Results Per Page\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <CoinPairTable\r\n              coinPairs={coinPairs}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onView={this.handleView}\r\n              onSort={this.handleSort}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4}></Grid>\r\n          <Grid>\r\n            <PaginateMUI\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4}></Grid>\r\n        </Grid>\r\n        <footer\r\n          style={{\r\n            height: \"30px\",\r\n            textAlign: \"center\",\r\n            padding: \"30px\",\r\n          }}\r\n        >\r\n          Candle-data 2020\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport theme from \"./theme\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./components/main\";\r\nimport { Navigation } from \"./common\";\r\nimport CandleDataTimeline from \"./components/candleDataTimeline\";\r\n\r\nconst App = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <Router>\r\n      <Navigation basename={process.env.PUBLIC_URL}/>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route path=\"/timeline\" component={CandleDataTimeline} />\r\n        <Route component={() => <div>404 Not found</div>} />\r\n      </Switch>\r\n    </Router>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"font-awesome/css/font-awesome.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}